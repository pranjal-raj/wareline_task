name: AppBuild

on:
  pull_request:
    branches:
      - 'main'
  push:
    branches:
      - 'main'

jobs: 
 
  generate-apk: # Job to generate debug apk
    name: ⚙️Generate APK
    runs-on: ubuntu-latest
    steps:
    
      - name: get repository name
        run: echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
      
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 17
      
      - name: Cache Gradle and wrapper
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Make gradle executable
        run: chmod +x ./gradlew
        
      - name: Build debug apk
        run: ./gradlew assembleDebug --stacktrace
     
     
      - name: Upload debug apk
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.REPOSITORY_NAME }}
          path: app/build/outputs/apk/debug/app-debug.apk

  create-release: # Job to create a new github release and upload the generated apk
    name: 🎉 Create Release
    needs: [ generate-apk ]
    runs-on: ubuntu-latest
    steps:
      - name: get repository name
        run: echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
      
      - name: Download APK from build
        uses: actions/download-artifact@v4
        with:
          name:  ${{ env.REPOSITORY_NAME }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name:  ${{ env.REPOSITORY_NAME }} v${{ github.run_number }}

      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
         upload_url: ${{ steps.create_release.outputs.upload_url }}
         asset_path: app-debug.apk
         asset_name:  ${{ env.REPOSITORY_NAME }}.apk
         asset_content_type: application/zip
